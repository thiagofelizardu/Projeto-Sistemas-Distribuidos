spring:
  application:
    name: gateway

  kafka:
    # Ajuste para seu ambiente: localhost:29092 (docker local) ou kafka:9092 (dentro do compose)
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    admin:
      auto-create: true   # permite criar tópico se não existir

    listener:
      ack-mode: manual     # necess�rio para usar Acknowledgment
      concurrency: 3

    consumer:
      group-id: gateway-group
      enable-auto-commit: false
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        # delega para JsonDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: com.example.common.event
        # Se voc� enviar cabe�alho de tipo por alias, mapeie aqui:
        spring.json.type.mapping: >
          paymentEvent:com.example.common.event.PaymentEvent,
          paymentAuthorizedEvent:com.example.common.event.PaymentAuthorizedEvent,
          paymentRejectedEvent:com.example.common.event.PaymentRejectedEvent
      max-poll-records: 500

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        # boas pr�ticas de producer
        enable.idempotence: true
        acks: all
        compression.type: zstd
        linger.ms: 5
        max.in.flight.requests.per.connection: 5
        # incluir cabe�alhos de tipo para facilitar a desserializa��o no consumidor downstream
        spring.json.add.type.headers: true
        spring.json.type.mapping: >
          paymentAuthorizedEvent:com.example.common.event.PaymentAuthorizedEvent,
          paymentRejectedEvent:com.example.common.event.PaymentRejectedEvent

app:
  kafka:
    topics:
      authorize-in:
        name: payments.authorize.in
        partitions: 6
        replicas: 1
      persist-in:
        name: payments.persist.in
        partitions: 6
        replicas: 1
server:
  port: 8081
