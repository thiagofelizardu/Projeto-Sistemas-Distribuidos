version: '3.8'
services:
  # 1. Dependências da infraestrutura
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    networks:
      - sd-payments-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_started
    networks:
      - sd-payments-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CREATE_TOPICS: "payments.authorize.in:6:1,payments.persist.in:6:1,payments.rejected:3:1,payments.dlq:3:1"
    healthcheck:
      test: ["CMD", "cub", "kafka-ready", "-b", "localhost:9092", "1", "1"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    container_name: postgres
    networks:
      - sd-payments-net
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sd_payments_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d sd_payments_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. Microsserviços da aplicação (renomeados para consistência)
  payment-api:
    build:
      context: ./payment
    container_name: payment-api
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - sd-payments-net
    ports:
      - "8080:8080"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  authorization-gateway:
    build:
      context: ./gateway
    container_name: authorization-gateway
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - sd-payments-net
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  persister-service:
    build:
      context: ./persister
    container_name: persister-service
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - sd-payments-net
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/sd_payments_db

networks:
  sd-payments-net:
    driver: bridge

volumes:
  postgres-data: